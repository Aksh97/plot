"""Plot degree distribution of provenance graph generated by CamFlow and Other Systems."""
import os
import argparse
import matplotlib.pyplot as plt


def read_degrees(folder):
    """
    Read degree files generated by Unicorn-Java.

    :param folder: The location of the folder that contains degree files. Apache Flink, when processing the graph,
    generates multiple files simultaneously.
    :return: An array that contains the degrees of the graph.
    """

    data = list()

    filenames = os.listdir(folder)
    for fn in filenames:
        with open(os.path.join(folder, fn), 'r') as f:
            for line in f:
                data.append(int(line.strip().split(',')[1]))

    return data


def plot_hist(data, xlabel_str, ylabel_str, savefilepath, with_legend=False):
    """
    Plot the histogram of the degree data.

    :param data: the degree data
    :param xlabel_str: label string of the x-axis
    :param ylabel_str: label string of the y-axis
    :param savefilepath: the file path to save the generated plot in PDF
    :param with_legend: include the legend in the figure
    :return: None
    """

    num_bins = 20

    fig, ax = plt.subplots()
    n, bins, patches = ax.hist(data, num_bins)

    # set labels
    ax.set_xlabel(xlabel_str)
    ax.set_ylabel(ylabel_str)
    # ax.set_xlim(left=0, right=15000)
    ax.set_ylim(bottom=0, top=100)
    if with_legend:
        ax.legend(loc=9, prop={'size': 6}, bbox_to_anchor=(0.5, -0.3), ncol=4)

    fig.tight_layout()
    plt.savefig(savefilepath, format='pdf', bbox_inches='tight')


if __name__ == "__main__":

    parser = argparse.ArgumentParser(description='Plot degree distribution of a provenance graph.')
    parser.add_argument('-i', '--input', help='input data folder', required=True)
    parser.add_argument('-o', '--output', help='input file path to save the plot', required=True)
    args = parser.parse_args()

    data = read_degrees(args.input)
    plot_hist(data, "Degrees", "Counts", args.output)
